install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse", dependencies = TRUE)
install.packages("pkgload")
install.packages(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("reprex")
install.packages("tidyverse")
update.packages()
q()
install.packages(tidyverse)
install.packages("tidyverse")
install.package("data.table")
install.package("cli")
install.package("tidyverse")
install.packages("tidyverse")
install.packages("cli")
update.packages()
install.packages(c("askpass", "backports", "BH", "bit", "blob", "caTools", "clipr", "curl", "DBI", "digest", "evaluate", "fansi", "htmltools", "htmlwidgets", "httpuv", "jsonlite", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pkgconfig", "prettyunits", "profvis", "progress", "promises", "R6", "Rcpp", "RCurl", "RJSONIO", "rmarkdown", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "tidyselect", "tinytex", "xfun", "yaml"))
conda install clangxx_osx-64
install.packages(c("askpass", "backports", "bit", "caTools", "curl", "digest", "fansi", "htmltools", "httpuv", "jsonlite", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "profvis", "promises", "Rcpp", "RCurl", "RJSONIO", "stringi", "sys", "yaml"))
install.packages(c("askpass", "backports", "bit", "caTools", "curl", "digest", "fansi", "htmltools", "httpuv", "jsonlite", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "profvis", "promises", "Rcpp", "RCurl", "RJSONIO", "stringi", "sys", "yaml"))
install.packages(c("askpass", "backports", "bit", "caTools", "curl", "digest", "fansi", "htmltools", "httpuv", "jsonlite", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "profvis", "promises", "Rcpp", "RCurl", "RJSONIO", "stringi", "sys", "yaml"))
install.packages(c("askpass", "backports", "bit", "caTools", "curl", "digest", "fansi", "htmltools", "httpuv", "jsonlite", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "profvis", "promises", "Rcpp", "RCurl", "RJSONIO", "stringi", "sys", "yaml"))
install.packages(c("askpass", "backports", "bit", "caTools", "curl", "digest", "fansi", "htmltools", "httpuv", "jsonlite", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "profvis", "promises", "Rcpp", "RCurl", "RJSONIO", "stringi", "sys", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "caTools", "clipr", "curl", "DBI", "digest", "evaluate", "fansi", "htmltools", "htmlwidgets", "httpuv", "jsonlite", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pkgconfig", "prettyunits", "profvis", "progress", "promises", "R6", "Rcpp", "RCurl", "RJSONIO", "rmarkdown", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "tidyselect", "tinytex", "xfun", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "caTools", "clipr", "curl", "DBI", "digest", "evaluate", "fansi", "htmltools", "htmlwidgets", "httpuv", "jsonlite", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pkgconfig", "prettyunits", "profvis", "progress", "promises", "R6", "Rcpp", "RCurl", "RJSONIO", "rmarkdown", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "tidyselect", "tinytex", "xfun", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "caTools", "clipr", "curl", "DBI", "digest", "evaluate", "fansi", "htmltools", "htmlwidgets", "httpuv", "jsonlite", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pkgconfig", "prettyunits", "profvis", "progress", "promises", "R6", "Rcpp", "RCurl", "RJSONIO", "rmarkdown", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "tidyselect", "tinytex", "xfun", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "caTools", "clipr", "curl", "DBI", "digest", "evaluate", "fansi", "htmltools", "htmlwidgets", "httpuv", "jsonlite", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pkgconfig", "prettyunits", "profvis", "progress", "promises", "R6", "Rcpp", "RCurl", "RJSONIO", "rmarkdown", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "tidyselect", "tinytex", "xfun", "yaml"))
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
print("Hello World!")
z <- c(pi, 205, 149, -2)
y <- c(z, 555, z)
y <- 2 * y + 760
my_sqrt <- sqrt(y - 1)
length(my_sqrt)
0/0
print(0/0)
my_sqrt[10]
print(my_sqrt[10] + 1)
age <- c(12, 28, 35, 27, NA, 25, 32, 45, 31, 23, NA, 34)
age[!is.na(age)]
papers <- as_tibble(read_csv("CitesforSara.csv"))
library(tidyverse)
papers <- as_tibble(read_csv("CitesforSara.csv"))
papers <- as_tibble(read_csv("/Module_1/CitesforSara.csv"))
papers <- as_tibble(read_csv("Module_1/CitesforSara.csv"))
papers <- as_tibble(read_csv("R/Module_1/CitesforSara.csv"))
papers_select <- select(papers, journal, year, cites, title, au1)
View(papers_select)
filter(papers_select, cites >= 100)
cc = group_by(papers,journal)
View(cc)
n_distinct(papers$journal)
summarize(group_by(papers,journal), ci = sum(cites))
summarize(group_by(papers,journal), sum(cites))
summarize(group_by(papers,journal), sum(cites))
summarize(group_by(papers,journal = "Econometrica"), sum(cites))
summarize(group_by(papers,journal), sum(cites))
group_by(papers,journal)
c(group_by(papers,journal))
summarize(group_by(papers,journal), sum(cites))
summarize(group_by(papers,journal), sum(cites))
filter(summarize(group_by(papers,journal), sum(cites)), journal = "Econometrica")
filter(summarize(group_by(papers,journal), sum(cites)), journal == "Econometrica")
journals_group <- group_by(papers,journal)
summarized_journal <- summarize(journals_group, sum(cites))
filter(summarised_journal, journal == "Econometrica")
journals_group <- group_by(papers,journal)
summarized_journal <- summarize(journals_group, sum(cites))
filter(summarized_journal, journal == "Econometrica")
n_distinct(papers&au1)
n_distinct(papers$au1)
unique(papers$au1)
papers_female <- select(papers, contains("female"))
papers <- as_tibble(read_csv("MIT_Data-analysis-for-social_scientists/Module_1/CitesforSara.csv"))
papers <- as_tibble(read_csv("R/MIT_Data-analysis-for-social_scientists/Module_1/CitesforSara.csv"))
papers <- as_tibble(read_csv("R/MIT_Data-analysis-for-social_scientists/Module_1/CitesforSara.csv"))
rbinom(8, 1000, 0.2)
x<-rbinom(8, 1000, 0.2)
#where n refers to number of observations, size refers to number of trials,
#and prob refers to probability of success on each trial
hist(x)
x
data.frame(x)
hist(data.frame(x))
hist(data.frame(x)$x)
hist(x)
dbinom(7, 10, 0.65)
pbinom(3, 10, 0.65)
1 - pbinom(3, 10, 0.65)
1 - (dbinom(8, 10, 0.65) + dbinom(9, 10, 0.65) + dbinom(10, 10, 0.65))
1 - (dbinom(0, 10, 0.65) + dbinom(1, 10, 0.65) + dbinom(2, 10, 0.65) + dbinom(3, 10, 0.65) + dbinom(4, 10, 0.65) + dbinom(5, 10, 0.65))
dunif(0.1, 0, 1)
dunif(0.2, 0, 1)
dunif(7, 3, 8)
runif(7, 3 ,8 )
1 - (dbinom(8, 10, 0.65) + dbinom(9, 10, 0.65) + dbinom(10, 10, 0.65))
x<-rbinom(8, 1000, 0.2)
#where n refers to number of observations, size refers to number of trials,
#and prob refers to probability of success on each trial
hist(x)
x<-rbinom(8, 1000, 0.2)
#where n refers to number of observations, size refers to number of trials,
#and prob refers to probability of success on each trial
hist(x)
successes<-rbinom(8, 1000, 0.2)
hist(successes)
successes<-rbinom(8, 1000, 0.2)
hist(successes)
runif(7, 3 ,8 )
1 - pbinom(3, 10, 0.65)
dbinom(7, 10, 0.65)
1 - (dbinom(8, 10, 0.65) + dbinom(9, 10, 0.65) + dbinom(10, 10, 0.65))
1 - (dbinom(0, 10, 0.65) + dbinom(1, 10, 0.65) + dbinom(2, 10, 0.65) + dbinom(3, 10, 0.65) + dbinom(4, 10, 0.65) + dbinom(5, 10, 0.65))
runif(7, 3 ,8 )
runif(7, 3, 8)
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot2(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
library(ggplot2)
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
library(ggplot2)
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
binom_draws <- as_tibble(data.frame(successes))
library(ggplot2)
library(tidyverse)
binom_draws <- as_tibble(data.frame(successes))
estimated_pf <- binom_draws %>%
group_by(successes) %>%
summarize(n=n()) %>%
mutate(freq=n/sum(n))
ggplot(estimated_pf, aes(x=successes, y=freq)) +
geom_col() +
ylab("Estimated Density")
library(ggplot2)
library(tidyverse)
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
library(ggplot2)
library(tidyverse)
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
#Plot the computed theoretical density.
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
calculated_cdf <- my_binom %>%
mutate(cdf=_______)
#Plot the computed cdf
ggplot(calculated_cdf, aes(x=x, y=cdf)) + geom_step() +
ylab("CDF")
calculated_cdf <- my_binom %>%
mutate(cdf=_______)
calculated_cdf <- my_binom %>%
mutate(cdf=cumsum(prob))
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
#Plot the computed theoretical density.
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
calculated_cdf <- my_binom %>%
mutate(cdf=cumsum(prob))
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
library(ggplot2)
library(tidyverse)
n <- 1000
p <- 0.2
my_binom<-as_tibble(list(x=0:n, prob=dbinom(0:n, n, p)))
#Plot the computed theoretical density.
ggplot(my_binom, aes(x=x, y=prob)) + geom_col() +
ylab("Analytical Density")
calculated_cdf <- my_binom %>%
mutate(cdf=cumsum(prob))
#Plot the computed cdf
ggplot(calculated_cdf, aes(x=x, y=cdf)) + geom_step() +
ylab("CDF")
install.packages(c("cowplot", "ggplot2", "tidyverse"))
# set the library with the packages we use
library(ggplot2)
library(tidyverse)
require(cowplot)
#load in the data
bihar_data<-read_csv("data/Bihar_sample_data.csv")
setwd("~/R/MIT_Data-analysis-for-social_scientists/Module_3")
# set the library with the packages we use
library(ggplot2)
library(tidyverse)
require(cowplot)
#load in the data
bihar_data<-read_csv("Bihar_sample_data.csv")
bihar_data<-read_csv("Lessons_concent/Bihar_sample_data.csv")
#load in the data
bihar_data<-read_csv("/Lessons_concent/Bihar_sample_data.csv")
#load in the data
bihar_data<-read_csv("/Bihar_sample_data.csv")
bihar_data<-read_csv("/Bihar_sample_data.csv")
bihar_data<-read_csv("/Bihar_sample_data.csv")
bihar_data<-read_csv("/Bihar_sample_data.csv")
#load in the data
bihar_data<-read_csv("Bihar_sample_data.csv")
#load in the data
bihar_data<-read_csv("Lessons_content/Bihar_sample_data.csv")
#have a look
print(bihar_data)
